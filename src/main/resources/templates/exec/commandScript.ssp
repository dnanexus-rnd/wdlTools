<%
// This is based on Cromwell code from
// [BackgroundAsyncJobExecutionActor.scala].  Generate a bash
// script that captures standard output, and standard
// error. We need to be careful to pipe stdout/stderr to the
// parent stdout/stderr, and not lose the result code of the
// shell command. Notes on bash magic symbols used here:
//
//  Symbol  Explanation
//    >     redirect stdout
//    2>    redirect stderr
//    <     redirect stdin
%>
<%@ val command: String %>
<%@ val paths: wdlTools.exec.ExecPaths %>
#!/bin/bash
(
  cd ${paths.homeDir.toString}
  ${command}
) \\
> >( tee ${paths.stdout} ) \\
2> >( tee ${paths.stderr} >&2 )

echo $$? > ${paths.returnCode}

# make sure the files are on stable storage
# before leaving. This helps with stdin and stdout
# characters that may be in the fifo queues.
sync